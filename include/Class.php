<?class FrontClass extends Mail{	public $settings;	public $pageid;    public $data;    public $kid; public function __construct($settings) {   parent::__construct($settings);   $this->settings = $settings;  } public function ayarlar($data) {       if($data):        $d =  $this->tekSorgu("select * from ayarlar where name='$data' ");        return ($d['value']) ? $d['value']:null;       endif; }   public function getID($item,$lang)   {       return (($lang=='tr') ? $item['id']:$item['masterid']);   }    public  function getKategoriBaslik($id,$lang)    {        if($lang=='tr')            $kat = $this->teksorgu("select * from kategoriler where id='$id' and masterid=0");        else            $kat = $this->teksorgu("select * from kategoriler where masterid='$id' and dil='$lang'");        if($kat['ustu']==0)            return $kat['kategori'];        else            return $this->getKategoriBaslik($kat['ustu'],$lang);    } public function select($table,$row,$selected=''){     $text ='';     if($row and $table):         $select = $this->sorgu("select $row from $table GROUP  by $row order by $row");     if(is_array($select))         foreach ($select as $item):           if($item[$row])  $text .='<option value="'.$item[$row].'" '.(($selected and ($selected == $item[$row])) ? 'selected="selected"':null).'>'.$item[$row].'</option>';             endforeach;     endif;     return  $text; } public function submenu($ustu,$url){        $text = '';        $ulist = $this->sorgu("select * from sayfakategori where ustu='$ustu' order by sira");        if(is_array($ulist))            foreach($ulist as $s):                $sid = $s['id'];                $urunsay = $this->sorgu("select * from yazilar where ustu='$sid'");                $text .= ' <li class="menu-item"><a href="'.strtolower($this->per($s['kategori'])).','.$url.','.$s['id'].'.html">'.$s['kategori'].'</a>';                if($urunsay and count($urunsay)>0):                    $text .= '  <ul class="sub-menu">'.$this->submenu($sid).'</ul>';                endif;                $text .='</li>';            endforeach;        return $text;    }    public function BaseURL($url = null)    {        return (($url) ? $this->settings->config('url').$url : $this->settings->config('url'));    }    public function teksayfa($id=null,$kid=10) {	 if($id>0) $yazi = $this->tekSorgu("select * from yazilar where id='$id'");	 else $yazi = $this->tekSorgu("select * from yazilar where kid='$kid' order by sira");	return $yazi;  } public function tekhaber($id=null) {	 if($id>0) $yazi = $this->tekSorgu("select * from haberler where id='$id'");	 else $yazi = $this->tekSorgu("select * from haberler order by sira");	return $yazi;  } public function resimGet($resim){   if(self::isJSON($resim)):   $files =  json_decode($resim,JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES);   return (isset($files['image']) and is_array($files)) ? (($files['crop']=="true") ? "crop_".$files['image']:$files['image']):null;   else:   return $resim;   endif;} public function fileGet($file)    {        if(self::isJSON($file)):            $files =  json_decode($file,JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES);            return $files;        else:            return $file;        endif;    } public function jsonGet($data)    {        if(self::isJSON($data)):            $datas =  json_decode($data,JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES);            return $datas;        else:            return $data;        endif;    } public function ozellikGet($id)    {       $a = array();        $ozellik = $this->tekSorgu("select * from islamitatil where id='$id'");        if(!is_null($ozellik['ozellik'])):        if(self::isJSON($ozellik['ozellik'])):            $oz =  json_decode($ozellik['ozellik'],JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES);        else:            $oz = $ozellik['ozellik'];        endif;        if(is_array($oz) and !is_null($oz))            foreach ($oz as $item):                if(is_numeric($item)):                $b = $this->tekSorgu("select * from ozellik where id='$item'");                $a[] =  $b['baslik'];                    endif;                endforeach;            endif;        return $a;    } public function _include($file,$data=array(),$theme=null){    $sub = (file_exists('view')) ? 'view/':null;   if($file.'.php' and file_exists($sub.$theme.$file.'.php')):    if($data) extract($data);    ob_start();    include($sub.$theme.$file.'.php');    return ob_get_clean();    else:        $x=0;    if(isset($data['LangGET']))     foreach ($data['LangGET']->header() as $key=>$value):            if($data['page'] == $this->permalink($value)):            if($key and file_exists($theme.'sayfa/'.$key.'.php'))            return   $this->_include($theme.'sayfa/'.$key,$data);            $x++;            endif;        endforeach;//     if($x==0 and file_exists($sub.'error/404.php'))    // return $this->_include('error/404',$data);	endif;	} public function _ayarlar()    {        $_SESSION['ayarlar'] = null;        $_SESSION['ayarlar'] = array();        $siteset =  $this->sorgu("select * from ayarlar");        if (count($siteset)>0)        {            foreach($siteset as $name=>$value):                $_SESSION['ayarlar'][$value["name"]] = $value["value"];            endforeach;        }    } public function aylar($ay,$tur=1)    {        switch ($tur):            case 1 :  $aylar = array('Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'); break;            case 2 :  $aylar = array('OCA', 'ŞUB', 'MAR', 'NİS', 'MAY', 'HAZ', 'TEM', 'AĞU', 'EYL', 'EKİ', 'KAS', 'ARA'); break;            case 3 :  $aylar = array('Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'); break;            case 4 :  $aylar = array('OCAK', 'ŞUBAT', 'MART', 'NİSAN', 'MAYIS', 'HAZİRAN', 'TEMMUZ', 'AĞUSTOS', 'EYLÜL', 'EKİM', 'KASIM', 'ARALIK'); break;        endswitch;        if(is_numeric($ay)) return $aylar[$ay-1];    } public function gunler($ay)    {        $aylar = array('PAZAR','PAZARTESİ', 'SALI', 'ÇARŞAMBA', 'PERŞEMBE', 'CUMA', 'CUMARTESİ');        if(is_numeric($ay)) return $aylar[$ay];    } public function teltemiz($tel)    {        $find = array(" ","(",")","+","-",";");        $str = str_replace($find,"", $tel);        return $str;    } public static function isJSON($string){        return is_string($string) && is_array(json_decode($string, true)) && (json_last_error() == JSON_ERROR_NONE) ? true : false;    }}?>